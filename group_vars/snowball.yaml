
# zpool create z2 raidz2 -m /mnt/z2 -o ashift=12 /dev/disk/by-id/ata-HGST_HDN728080ALE604_VJH35HDX /dev/disk/by-id/ata-HGST_HUH728080ALE600_VKGKGEVX /dev/disk/by-id/ata-WDC_WD80EMAZ-00WJTA0_7SGRVHYC /dev/disk/by-id/ata-WDC_WD80EZZX-11CSGA0_VK0U9B3Y

# # zfs raidz2
# ## in use
# /dev/disk/by-id/ata-HGST_HDN728080ALE604_VJH35HDX
# /dev/disk/by-id/ata-HGST_HUH728080ALE600_VKGKGEVX
# /dev/disk/by-id/ata-WDC_WD80EMAZ-00WJTA0_7SGRVHYC
# /dev/disk/by-id/ata-WDC_WD80EZZX-11CSGA0_VK0U9B3Y
# ## spare
# /dev/disk/by-id/ata-ST8000AS0002-1NA17Z_Z8411V1G

main_username: alex

# geerlingguy.ntp
ntp_timezone: "Europe/London"

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dcporph", command: "docker-compose -f ~/docker-compose.yml --remove-orphans " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/z2/pennywise/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -o space | sort -k4 --human-numeric-sort" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs | sort -k 6" }
  - { alias: "hdtemp", command: "sudo hddtemp -q /dev/sd[a,b,c,d,e,f,g,h,i,j,k,l,m,n]" }
  - { alias: "nvmetemp", command: "for i in {0..3}; do nvme smart-log /dev/nvme'$i'n1 | grep temperature; done;" } 

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: dnsutils
  - name: fio
  - name: git
  - name: hddtemp
  - name: htop
  - name: ffmpeg
  - name: iftop
  - name: intel-gpu-tools
  - name: iotop
  - name: ipmitool
  - name: lm-sensors
  - name: mc
  - name: mutt
  - name: ncdu
  - name: net-tools
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: openssh-server
  - name: python3
  - name: python-setuptools
  #- name: qemu-guest-agent
  #- name: sanoid
  - name: screen
  #- name: ssh-import-id
  - name: smartmontools
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  #- name: wireguard-tools
  - name: xfsprogs
  - name: zfsutils-linux

# ktz-sanoid
syncoid_cron_jobs: []

# ktz-traefik
traefik_file_provider: false

# ironicbadger.docker_compose_generator
appdata_path: /z2tank/mrchuckles/appdata
local_domain: "snowball.nr.{{ domain_me }}"
containers:
  ###
  - service_name: tr
    active: true
    image: traefik
    labels:
      - traefik.enable=false
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path }}/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
  ###
  - service_name: plex
    active: true
    image: plexinc/pms-docker
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - "{{ appdata_path }}/plex/config:/config"
      - /mnt/z2/tv/recordings:/data
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: linuxserver/librespeed
    ports:
      - 8008:80
    labels:
      - "traefik.http.routers.librespeed.rule=Host(`speedtest.{{ local_domain }}`)"
      - traefik.http.routers.librespeed.tls.certresolver=cloudflare
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: smokeping
    active: true
    image: linuxserver/smokeping
    volumes:
      - "{{ appdata_path }}/smokeping/config:/config"
      - "{{ appdata_path }}/smokeping/data:/data"
    labels:
      - "traefik.http.routers.smokeping.rule=Host(`smokeping.{{ local_domain }}`)"
      - traefik.http.routers.smokeping.tls.certresolver=cloudflare
      - traefik.http.services.smokeping.loadbalancer.server.port=80
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: abs
    active: true
    image: advplyr/audiobookshelf
    labels:
      - "traefik.http.routers.audiobookshelf.rule=Host(`abs.{{ local_domain }}`)"
      - traefik.http.routers.audiobookshelf.tls.certresolver=cloudflare
    volumes:
      - "/z2tank/morpheus/tank/audiobooks/library:/audiobooks:ro"
      - "{{ appdata_path }}/audiobookshelf/metadata:/metadata"
      - "{{ appdata_path }}/audiobookshelf/config:/config"
    restart: unless-stopped