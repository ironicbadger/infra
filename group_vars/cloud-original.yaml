---
main_username: ironicbadger

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: htop
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: sanoid
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: wireguard
  - name: zfsutils-linux

# ktz-sanoid
sanoid_config_source: sanoid-cloud.conf
syncoid_cron_jobs:
  - { job: 'echo', name: 'placeholder', weekday: '*', hour: '10' }


# geerlingguy.security
security_ssh_port: "{{ cloud_ssh_port }}"
security_sudoers_passwordless:
  - "{{ main_username }}"

# geerlingguy.ntp
ntp_timezone: "America/New_York"

# geerlingguy.docker
#docker_compose_version: 1.29.2

# geerlingguy.github_users
github_users_authorized_keys_exclusive: false
github_users:
  # You can specify an object with 'name' (required) and 'groups' (optional):
  - name: "{{ main_username }}"
    groups: sudo,docker

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/tank/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs | sort -k 6"}

# ironicbadger.docker_compose_generator
global_env_vars:
  - "PUID={{ main_uid }}"
  - "PGID={{ main_gid }}"
  - "TZ={{ ntp_timezone }}"

appdata_path: "/opt/appdata"

docker_compose_generator_output_path: "/home/{{ main_username }}"
containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      #- 8080:8080
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path }}/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
###
  - service_name: ktz-unifi
    active: false
    image: lscr.io/linuxserver/unifi-controller
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ubiq.rule=Host(`{{ cloud_url_ubiq }}`)"
      - traefik.http.routers.ubiq.entrypoints=websecure
      - traefik.http.routers.ubiq.tls=true
      - traefik.http.routers.ubiq.tls.certresolver=cloudflare
      - traefik.http.services.ubiq.loadbalancer.server.scheme=https
      - traefik.http.services.ubiq.loadbalancer.server.port=8443
    ports:
      - "{{ cloud_unifi_port_advertise }}:{{ cloud_unifi_port_advertise_int }}"
      - 8080:8080
      - 3478:3478/udp
    mem_limit: 1g
    volumes:
      - "{{ appdata_path }}/ktz-unifi:/config"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: ktz-blog
    active: true
    image: ghost:4-alpine
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzblog.rule=Host(`{{ cloud_url_ktz_blog }}`)"
      - traefik.http.routers.ktzblog.entrypoints=websecure
      - traefik.http.routers.ktzblog.tls.certresolver=cloudflare
      - "traefik.http.routers.ktzblog-rss.rule=Host(`{{ cloud_url_ktz_blog }}`) && PathPrefix(`/rss`)"
      - traefik.http.routers.ktzblog-rss.entrypoints=websecure
      - traefik.http.routers.ktzblog-rss.tls.certresolver=cloudflare
      - traefik.http.routers.ktzblog-rss.middlewares=rss-cache-control
      - traefik.http.middlewares.rss-cache-control.headers.customresponseheaders.Cache-Control=public, max-age=600
    environment:
      - NODE_ENV=production
      - "url=https://{{ cloud_url_ktz_blog }}"
    volumes:
      - "{{ appdata_path }}/ktz-blog:/var/lib/ghost/content"
    restart: unless-stopped
###
  - service_name: ktz-blog-mum
    active: true
    image: ghost:4-alpine
    labels:
      - traefik.enable=true
      - "traefik.http.routers.mumblog.rule=Host(`{{ cloud_url_mum_blog }}`)"
      - traefik.http.routers.mumblog.entrypoints=websecure
      - traefik.http.routers.mumblog.tls.certresolver=cloudflare
    environment:
      - NODE_ENV=production
      - "url=https://{{ cloud_url_mum_blog }}"
    volumes:
      - "{{ appdata_path }}/ktz-blog-mum:/var/lib/ghost/content"
    restart: unless-stopped
###
  - service_name: ktz-blog-cat
    active: true
    image: ghost:5
    labels:
      - traefik.enable=true
      - "traefik.http.routers.purrfectprose.rule=Host(`purrfectprose.com`)"
      - traefik.http.routers.purrfectprose.entrypoints=websecure
      - traefik.http.routers.purrfectprose.tls.certresolver=cloudflare
      # - "traefik.http.routers.purrfectprose-rss.rule=Host(`purrfectprose.com`) && PathPrefix(`/rss`)"
      # - traefik.http.routers.purrfectprose-rss.entrypoints=websecure
      # - traefik.http.routers.purrfectprose-rss.tls.certresolver=cloudflare
      # - traefik.http.routers.purrfectprose-rss.middlewares=rss-cache-control
      # - traefik.http.middlewares.rss-cache-control.headers.customresponseheaders.Cache-Control=public, max-age=600
    environment:
      - NODE_ENV=production
      - "url=https://purrfectprose.com"
      - database__client=mysql
      - database__connection__host=ktz-blog-cat-db
      - "database__connection__user={{ purrfect_db_user }}"
      - "database__connection__password={{ purrfect_db_pass }}"
      - database__connection__database=ghost
    volumes:
      - "{{ appdata_path }}/ktz-blog-cat/content:/var/lib/ghost/content"
    depends_on:
      - ktz-blog-cat-db
    restart: unless-stopped
  - service_name: ktz-blog-cat-db
    active: true
    image: mysql:8.0
    volumes:
      - "{{ appdata_path }}/ktz-blog-cat/db:/var/lib/mysql"
    environment:
      - "MYSQL_ROOT_PASSWORD={{ purrfect_db_pass }}"
    restart: unless-stopped
  ###
  - service_name: ktz-pastebin
    active: true
    image: mkaczanowski/pastebin
    command:
      - --address
      - 0.0.0.0
      - --db
      - /var/lib/pastebin/
      - --uri
      - "https://paste.{{ domain_cloud }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzpaste.rule=Host(`paste.{{ domain_cloud }}`)"
      - traefik.http.routers.ktzpaste.entrypoints=websecure
      - traefik.http.routers.ktzpaste.tls.certresolver=cloudflare
      - traefik.http.services.ktzpaste.loadbalancer.server.port=8000
    volumes:
      - "{{ appdata_path }}/ktz-pastebin:/var/lib/pastebin"
    restart: unless-stopped
  ###
  - service_name: ktz-lychee
    active: true
    image: lycheeorg/lychee:v4.3.0
    volumes:
      - "{{ appdata_path }}/ktz-lychee/app/config:/config"
      - "{{ appdata_path }}/ktz-lychee/app/uploads:/uploads"
      - "{{ appdata_path }}/ktz-lychee/app/sym:/sym"
    environment:
      - PHP_TZ=America/New_York
      - DB_CONNECTION=mysql
      - DB_HOST=ktz-lychee-db
      - DB_PORT=3306
      - "DB_USERNAME={{ mysql_user_lychee }}"
      - "DB_DATABASE={{ mysql_database_lychee }}"
      - "DB_PASSWORD={{ mysql_password_lychee }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzlychee.rule=Host(`gallery.{{ domain_cloud }}`)"
      - traefik.http.routers.ktzlychee.tls.certresolver=cloudflare
    depends_on:
      - ktz-lychee-db
    restart: unless-stopped
  - service_name: ktz-lychee-db
    active: true
    image: mariadb:10.5.5-focal
    volumes:
      - "{{ appdata_path }}/ktz-lychee/db:/var/lib/mysql"
    environment:
      - "MYSQL_ROOT_PASSWORD={{ mysql_root_password }}"
      - "MYSQL_PASSWORD={{ mysql_password_lychee }}"
      - "MYSQL_DATABASE={{ mysql_database_lychee }}"
      - "MYSQL_USER={{ mysql_user_lychee }}"
    include_global_env_vars: false
    restart: unless-stopped
###
  - service_name: ktz-nginx-pmswiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.pmswiki.rule=Host(`perfectmediaserver.com`)
      - traefik.http.routers.pmswiki.entrypoints=websecure
      - traefik.http.routers.pmswiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/pms-wiki/site:/usr/share/nginx/html:ro"
      - "{{ appdata_path }}/pms-wiki/nginx:/etc/nginx/conf.d/:ro"
    restart: unless-stopped
###
  - service_name: ktz-nginx-pmswiki-demo
    active: false
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.pmswikidemo.rule=Host(`demo.perfectmediaserver.com`)
      - traefik.http.routers.pmswikidemo.entrypoints=websecure
      - traefik.http.routers.pmswikidemo.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/pms-wiki-demo/site:/usr/share/nginx/html:ro"
      - "{{ appdata_path }}/pms-wiki/nginx:/etc/nginx/conf.d/:ro"
    restart: unless-stopped
###
  - service_name: ktz-librespeed
    active: true
    image: lscr.io/linuxserver/librespeed
    ports:
      - 8008:80
    labels:
      - traefik.enable=true
      - "traefik.http.routers.librespeed.rule=Host(`speedtest.{{ domain_cloud }}`)"
      - traefik.http.routers.librespeed.entrypoints=websecure
      - traefik.http.routers.librespeed.tls.certresolver=cloudflare
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: ktz-systems
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.ktzsystems.rule=Host(`ktzsystems.com`)
      - traefik.http.routers.ktzsystems.entrypoints=websecure
      - traefik.http.routers.ktzsystems.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/ktzsystems/public:/usr/share/nginx/html:ro"
    restart: unless-stopped
###
  - service_name: ktz-simplelinks
    active: true
    image: fascinated/simple-links:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.ktzme.rule=Host(`alex.ktz.me`)
      - traefik.http.routers.ktzme.entrypoints=websecure
      - traefik.http.routers.ktzme.tls.certresolver=cloudflare
      - traefik.http.services.ktzme.loadbalancer.server.port=3000
    volumes:
      - "{{ appdata_path }}/ktzme/config/config.yml:/usr/src/app/config.yml:ro"
      - "{{ appdata_path }}/ktzme/config/public:/usr/src/app/public:rw"
    restart: unless-stopped
###
  - service_name: alleycat
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.alleycat.rule=Host(`alleycatmusictuition.com`)
      - traefik.http.routers.alleycat.entrypoints=websecure
      - traefik.http.routers.alleycat.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/alleycat:/usr/share/nginx/html:ro"
    restart: unless-stopped