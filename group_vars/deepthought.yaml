---

# ironicbadger.figurine
figurine_name: deep-thought

# ktz-sanoid
sanoid_config_source: sanoid-deepthought.conf
syncoid_cron_jobs: []

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: dnsutils
  - name: fio
  - name: git
  #- name: hddtemp #https://raw.githubusercontent.com/slowpeek/hddtemp/master/hddtemp-lt
  - name: htop
  - name: ffmpeg
  - name: iftop
  - name: intel-gpu-tools
  - name: iotop
  - name: ipmitool
  - name: lm-sensors
  - name: mc
  - name: mergerfs
  - name: molly-guard
  - name: ncdu
  - name: net-tools
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: openssh-server
  - name: python3
  - name: python3-setuptools
  - name: sanoid
  - name: screen
  - name: smartmontools
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: xfsprogs
  - name: zfsutils-linux

# ktz-tailscale-routes-fix
tailscale_routes_subnet: 10.42.0.0/20

# ironicbadger.docker_compose_generator
appdata_path: /mnt/appdata
download_path: /mnt/downloads
storage_path: /mnt/storage
wd_domain_me: "wd.{{ domain_me }}"
dt_domain_me: "dt.{{ wd_domain_me }}"

containers:
  ### Administrative
  ###
  - service_name: tr
    active: true
    image: traefik:2.11
    container_name: tr
    labels:
      - traefik.enable=false
    ports:
      - 80:80
      - 443:443
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
      #- --core.defaultRuleSyntax=v2
    volumes:
      - "{{ appdata_path }}/apps/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped

  ### Data Services
  ###
  - service_name: nextcloud
    active: true
    image: nextcloud:29
    environment:
      - "NEXTCLOUD_TRUSTED_DOMAINS=nc.{{ domain_cloud }}"
      - REDIS_HOST=nextcloud-redis
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    labels:
      - traefik.enable=true
      - "traefik.http.routers.nc.rule=Host(`nc.{{ domain_cloud }}`)"
    volumes:
      - "{{ appdata_path }}/apps/nextcloud/data:/var/www/html"
    restart: unless-stopped
  - service_name: nextcloud-db
    active: true
    image: postgres:16
    environment:
      - "POSTGRES_USER={{ nextcloud_db_user }}"
      - "POSTGRES_PASSWORD={{ nextcloud_db_password }}"
      - "POSTGRES_DB={{ nextcloud_db_name }}"
    volumes:
      - "{{ appdata_path }}/apps/nextcloud/db:/var/lib/postgresql/data"
    restart: unless-stopped
  - service_name: nextcloud-redis
    active: true
    image: redis:alpine
    restart: unless-stopped
  ###
  - service_name: gitea
    active: true
    image: gitea/gitea
    depends_on:
      - mysql
    environment:
      - "USER_UID={{ main_uid }}"
      - "USER_GID={{ main_gid }}"
      - "ROOT_URL=https://git.{{ domain_me }}"
      - "SSH_DOMAIN=git.{{ domain_me }}"
      - "APP_NAME=git.{{ domain_me }}"
      - "SSH_PORT=2222"
      - "DISABLE_REGISTRATION=true"
      - "REQUIRE_SIGNIN_VIEW=true"
      - TZ=America/New_York
      #- "ALLOWED_HOST_LIST=drone.m.wd.ktz.me"
    volumes:
      - "{{ appdata_path }}/apps/gitea:/data"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.git.rule=Host(`git.{{ domain_me }}`)"
      - traefik.http.services.git.loadbalancer.server.port=3000
    ports:
      - '"2222:2222"'
    restart: unless-stopped
  - service_name: mysql
    active: true
    image: mariadb
    environment:
      - "MYSQL_ROOT_PASSWORD={{ container_mysql_root_password }}"
      - "MYSQL_PASSWORD={{ container_mysql_password }}"
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    volumes:
      - "{{ appdata_path }}/databases/mysql:/var/lib/mysql"
    restart: unless-stopped
  - service_name: gitea-runner
    active: true
    image: gitea/act_runner:nightly
    depends_on:
      - gitea
    environment:
      - "GITEA_INSTANCE_URL=https://git.{{ domain_me }}"
      - "GITEA_RUNNER_REGISTRATION_TOKEN={{ gitea_runner_act_token }}"
      - GITEA_RUNNER_NAME=morpheus-docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
  ###
  - service_name: ninja_nginx
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ninja.rule=Host(`ninja.{{ dt_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/invoiceninja/ninja.conf:/etc/nginx/conf.d/default.conf:ro"
      - "{{ appdata_path }}/apps/invoiceninja/storage:/var/www/app/storage"
      - "{{ appdata_path }}/apps/invoiceninja/public/logo:/var/www/app/logo"
      - "{{ appdata_path }}/apps/invoiceninja/public:/var/www/app/public"
    restart: unless-stopped
  - service_name: invoiceninja
    active: true
    image: invoiceninja/invoiceninja:4.5.18
    depends_on:
      - mysql
      - ninja_nginx
    volumes:
      - "{{ appdata_path }}/apps/invoiceninja/storage:/var/www/app/storage"
      - "{{ appdata_path }}/apps/invoiceninja/public/logo:/var/www/app/logo"
      - "{{ appdata_path }}/apps/invoiceninja/public:/var/www/app/public"
    environment:
      - MYSQL_DATABASE=ninja
      - "MYSQL_ROOT_PASSWORD={{ container_mysql_password}}"
      - APP_DEBUG=0
      - "APP_URL={{ invoice_ninja_app_url }}"
      - "APP_KEY={{ invoice_ninja_app_key }}"
      - APP_CIPHER=AES-256-CBC
      - DB_USERNAME=root
      - "DB_PASSWORD={{ container_mysql_password}}"
      - DB_HOST=mysql
      - DB_DATABASE=ninja
      - MAIL_HOST=smtp.gmail.com
      - "MAIL_USERNAME={{ gmail_address }}"
      - "MAIL_PASSWORD={{ invoice_ninja_gmail_app_password }}"
      - MAIL_DRIVER=smtp
      - MAIL_FROM_NAME="Alex K"
      - "MAIL_FROM_ADDRESS={{ gmail_address }}"
      - REQUIRE_HTTPS=true
      - "TRUSTED_PROXIES='*'"
    restart: unless-stopped
  ###
  - service_name: immich-ts
    active: false
    image: tailscale/tailscale
    hostname: immich
    environment:
      - "TS_AUTHKEY={{ tailscale_immich_authkey }}?ephemeral=false"
      - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    ports:
      - 2283:3001
    volumes:
      - "{{ appdata_path }}/apps/immich/tailscale/state:/var/lib/tailscale"
      - "{{ appdata_path }}/apps/immich/tailscale/config:/config"
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
  - service_name: immich-server
    active: true
    image: "ghcr.io/immich-app/immich-server:{{ immich_version }}"
    #network_mode: service:immich-ts
    ports:
      - 2283:3001
    command:
      - start.sh
      - immich
    volumes:
      - "/mnt/bigrust20/photos/alex/immich/uploads:/usr/src/app/upload"
      - /mnt/bigrust20/photos/alex/images:/mnt/bigrust20/photos/alex/images:ro
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - "IMMICH_VERSION={{ immich_version }}"
      - "UPLOAD_LOCATION={{ immich_upload_location }}"
      - "DB_PASSWORD={{ immich_db_password }}"
      - "DB_USERNAME={{ immich_db_username }}"
      - "DB_DATABASE_NAME={{ immich_db_name }}"
      - "DB_DATA_LOCATION={{ immich_db_location }}"
      - "REDIS_HOSTNAME={{ immich_redis_hostname}}"
      - "DB_HOSTNAME={{ immich_db_hostname}}"
    depends_on:
      - immich-redis
      - immich-database
    restart: unless-stopped
  - service_name: immich-microservices
    active: true
    image: "ghcr.io/immich-app/immich-server:{{ immich_version }}"
    devices:
      - /dev/dri:/dev/dri
    command:
      - start.sh
      - microservices
    volumes:
      - "/mnt/bigrust20/photos/alex/immich/uploads:/usr/src/app/upload"
      - /mnt/bigrust20/photos/alex/images:/mnt/bigrust20/photos/alex/images:ro
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - "DB_PASSWORD={{ immich_db_password }}"
      - "DB_USERNAME={{ immich_db_username }}"
      - "DB_DATABASE_NAME={{ immich_db_name }}"
      - "REDIS_HOSTNAME={{ immich_redis_hostname}}"
      - "DB_HOSTNAME={{ immich_db_hostname}}"
    depends_on:
      - immich-redis
      - immich-database
    restart: unless-stopped
  - service_name: immich-machine-learning
    active: false
    image: "ghcr.io/immich-app/immich-machine-learning:{{ immich_version }}"
    volumes:
      - "{{ appdata_path }}/databases/immich/model-cache:/cache"
    restart: unless-stopped
  - service_name: immich-redis
    active: true
    image: registry.hub.docker.com/library/redis:6.2-alpine@sha256:84882e87b54734154586e5f8abd4dce69fe7311315e2fc6d67c29614c8de2672
    restart: unless-stopped
  - service_name: immich-database
    active: true
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      - "POSTGRES_PASSWORD={{ immich_db_password }}"
      - "POSTGRES_USER={{ immich_db_username }}"
      - "POSTGRES_DB={{ immich_db_name }}"
    volumes:
      - "{{ appdata_path }}/databases/immich/db:/var/lib/postgresql/data"
    restart: unless-stopped

###
  - service_name: mealie
    active: true
    image: hkotel/mealie:v0.5.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.mealie.rule=Host(`mealie.{{ wd_domain_me }}`)
    environment:
      - DB_TYPE=sqlite
    volumes:
      - "{{ appdata_path }}/apps/mealie:/app/data"
    restart: unless-stopped
###
  - service_name: freshrss
    active: true
    image: lscr.io/linuxserver/freshrss:latest
    labels:
      - traefik.enable=true
      - "traefik.http.routers.freshrss.rule=Host(`freshrss.{{ dt_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/freshrss:/config"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: wallabag
    active: true
    image: wallabag/wallabag
    labels:
      - traefik.enable=true
      - "traefik.http.routers.wallabag.rule=Host(`wallabag.{{ dt_domain_me }}`)"
    environment:
      - "SYMFONY__ENV__DOMAIN_NAME=https://wallabag.{{ dt_domain_me }}"
      - "SYMFONY__ENV__DATABASE_DRIVER=pdo_sqlite"
    volumes:
      - "{{ appdata_path }}/apps/wallabag:/var/www/wallabag/data"
    include_global_env_vars: false
    restart: unless-stopped
###
  - service_name: stirlingpdf
    active: true
    image: frooodle/s-pdf:latest
    labels:
      - traefik.enable=true
      - "traefik.http.routers.stirling.rule=Host(`pdf.{{ wd_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/stirlingpdf/configs:/configs"
      - "{{ appdata_path }}/apps/stirlingpdf/ocr-data:/usr/share/tesseract-ocr/5/tessdata"
    environment:
      - DOCKER_ENABLE_SECURITY=false
    include_global_env_vars: false
    restart: unless-stopped

  ### Monitoring
  ###
  - service_name: smokeping
    active: true
    image: lscr.io/linuxserver/smokeping
    hostname: deep-thought
    volumes:
      - "{{ appdata_path }}/databases/smokeping/config:/config"
      - "{{ appdata_path }}/databases/smokeping/data:/data"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.smokeping.rule=Host(`smokeping.{{ dt_domain_me }}`)"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: prometheus-igpu
    active: false
    image: restreamio/intel-prometheus
    ports:
      - 9101:8080
    devices:
      - /dev/dri:/dev/dri
    include_global_env_vars: false
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: lscr.io/linuxserver/librespeed
    ports:
      - 8008:80
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: docmost
    active: true
    image: docmost/docmost:latest
    depends_on:
      - docmost-db
      - docmost-redis
    labels:
      - traefik.enable=true
      - "traefik.http.routers.docmost.rule=Host(`docmost.{{ dt_domain_me }}`)"
    environment:
      - "APP_URL=https://docmost.{{ dt_domain_me }}"
      - APP_SECRET=ouhweDAIheuh2eefyg27y127t3iygtfaoyerhgweik
      - DATABASE_URL=postgresql://docmost:F838qFvBvRMdcg@docmost-db:5432/docmost?schema=public
      - REDIS_URL=redis://docmost-redis:6379
    volumes:
      - "{{ appdata_path }}/apps/docmost/storage:/app/data/storage"
    restart: unless-stopped
  - service_name: docmost-db
    active: true
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=docmost
      - POSTGRES_USER=docmost
      - POSTGRES_PASSWORD=F838qFvBvRMdcg
    volumes:
      - "{{ appdata_path }}/apps/docmost/db:/var/lib/postgresql/data"
    restart: unless-stopped
  - service_name: docmost-redis
    active: true
    image: redis:alpine
    volumes:
      - "{{ appdata_path }}/apps/docmost/redis:/data"
    restart: unless-stopped